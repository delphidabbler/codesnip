{
 * DataLocations.ps
 *
 * Pascal script for use in [Code] Section of CodeSnip's Install.iss.
 *
 * Gets information about location of application data folder and any existing
 * config files and databaseon on the system where CodeSnip is being installed.
 * Sets global variables storing folder paths that indicate where config files
 * and database can be found.
 *
 * $Rev$
 * $Date$
 *
 * ***** BEGIN LICENSE BLOCK *****
 *
 * Version: MPL 1.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with the
 * License. You may obtain a copy of the License at http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
 * the specific language governing rights and limitations under the License.
 *
 * The Original Code is DataLocations.ps.
 *
 * The Initial Developer of the Original Code is Peter Johnson
 * (http://www.delphidabbler.com/).
 *
 * Portions created by the Initial Developer are Copyright (C) 2008-2010 Peter
 * Johnson. All Rights Reserved.
 *
 * Contributors:
 *    NONE
 *
 * ***** END LICENSE BLOCK *****
}

{
  File locations in different CodeSnip versions
  ---------------------------------------------

  Note that the location of %AppData% varies according to the current user.
  Version numbers refer to the CodeSnip release.

  + Versions up to v1.8.11:
    - Config file: %AppData%\DelphiDabbler\CodeSnip\CodeSnip.ini
    - Main database directory: %AppData%\DelphiDabbler\CodeSnip\Data
    - No user defined database.

  + From v1.9 to v1.9.4:
    - Two config files:
      o %ProgramData%\DelphiDabbler\CodeSnip\Common.ini
      o %AppData%\DelphiDabbler\CodeSnip\User.ini
    - Main database directory:
        %ProgramData%\DelphiDabbler\CodeSnip\Data
    - No user defined database.

  + All v2 versions:
    - Two config files:
      o %ProgramData%\DelphiDabbler\CodeSnip\Common.ini
      o %AppData%\DelphiDabbler\CodeSnip\User.ini
    - Main database directory:
        %ProgramData%\DelphiDabbler\CodeSnip\Data
    - User defined database directory:
        %AppData%\DelphiDabbler\CodeSnip\UserData

  + All v3 versions:
    - Two config files:
      o %ProgramData%\DelphiDabbler\CodeSnip\Common.ini
      o %AppData%\DelphiDabbler\CodeSnip\User.3.ini
    - Main database directory:
        %ProgramData%\DelphiDabbler\CodeSnip\Data
    - User defined database directory:
        %AppData%\DelphiDabbler\CodeSnip\UserData.3

  + From v4.0:
    - Two config files:
      o %ProgramData%\DelphiDabbler\CodeSnip.4\Common.config
      o %AppData%\DelphiDabbler\CodeSnip.4\User.config
    - Main database directory:
        %ProgramData%\DelphiDabbler\CodeSnip.4\Database
    - User defined database directory:
        %AppData%\DelphiDabbler\CodeSnip.4\UserDatabase
}

const
  // TODO: rename these identifiers with "pi" (previous install) prefix
  // Identifiers for different types of existing installations of CodeSnip
  flNone = 0;           // CodeSnip not installed
  flOriginal = 1;       // original locations used up to v1.8.11
  flV1_9 = 2;           // v1.9 to v1.9.4
  flV2 = 3;             // all v2 versions
  flV3 = 4;             // all v3 versions
  flV4 = 5;             // from v4.0 (including alpha and beta code v3.99.x
  // Values of first and last indentifiers for different types of CodeSnip
  // installations
  flFirstVersionID = 1;
  flLastVersionID = 5;
  // Identifiers of type of current installation
  flCurrent = flV4;

var
  // Records info about previous install
  // TODO: Rename as gInstallID
  gFileLocation: Integer;

  // Arrays of paths to common and per-user config files.
  gCommonConfigFiles: array[flFirstVersionID..flLastVersionID] of string;
  gUserConfigFiles: array[flFirstVersionID..flLastVersionID] of string;
  // Array of paths to main and user database directories
  gMainDatabaseDirs: array[flFirstVersionID..flLastVersionID] of string;
  gUserDatabaseDirs: array[flFirstVersionID..flLastVersionID] of string;

  // Paths to common and user config files for program being installed
  gCurrentCommonConfigFile: string;
  gCurrentUserConfigFile: string;

// TODO: Move to UpdateDBase.ps
function MainDatabaseExists: Boolean;
  {Checks if database is installed in "new" location, i.e. under common app data
  folder.
    @return True if database is installed in new location, False if not.
  }
begin
  Result := FileExists(
    gMainDatabaseDirs[flCurrent] + '\categories.ini'
  );
end;

function DataConversionRequired: Boolean;
  {Checks if database and config files need to be converted and copied to new
  location in order for installed application to use them.
    @return True if data conversion required, False if not.
  }
begin
  Result := (gFileLocation <> flNone) and (gFileLocation < flCurrent);
end;

// TODO: Rename as InitFileAndDirInfo
// TODO: Split out code that determines install type into separate routine
procedure InitAppDataFolders;
  {Records the application data folders: both common and user. The user folder
  relates to the original user. This is not necessarily the user who is
  installing the application on Vista.
  }
var
  HelperApp: string;    // name of setup helper app
  TmpDir: string;       // temp dir where helper app writes required info
  TmpFile: string;      // temp file that received helper app's info
  Res: Integer;         // return code from helper app: ignored
  AppData: string;      // path to user's application data directory
  ProgramData: string;  // path to common application data directory
begin
  // TODO: Pull out code that gets user's appdata directory into new routine
  // Create name of a temporary directory in which helper app can store data
  TmpDir := ExpandConstant('{commonappdata}\DelphiDabbler\~Tmp');
  TmpFile := TmpDir + '\data';
  ForceDirectories(TmpDir);

  // Copy helper app into temp directory
  HelperApp := ExpandConstant('{#SetupHelper}');
  ExtractTemporaryFile(HelperApp);

  // Run helper app as original user. Helper app writes information relating to
  // original user to a ini file in temp directory created above.
  ExecAsOriginalUser(
    ExpandConstant('{tmp}\' + HelperApp),
    '"' + TmpFile + '"',
    '',
    SW_HIDE,
    ewWaitUntilTerminated,
    Res
  );

  // Get original user's application data directory from temp file
  AppData := AddBackSlash(
    GetIniString('SpecialFolders', 'CSIDL_APPDATA', '', TmpFile)
  );
  // Delete temporary directory
  DelTree(TmpDir, True, True, True);

  // Record system's common application data directory
  ProgramData := ExpandConstant('{commonappdata}\');

  // Record paths to config files and database for each installation type
  gCommonConfigFiles[flOriginal] := '';
  gUserConfigFiles[flOriginal] :=
    AppData + 'DelphiDabbler\CodeSnip\CodeSnip.ini';
  gMainDatabaseDirs[flOriginal] :=
    AppData + 'DelphiDabbler\CodeSnip\Data';
  gUserDatabaseDirs[flOriginal] := '';

  gCommonConfigFiles[flV1_9] :=
    ProgramData + 'DelphiDabbler\CodeSnip\Common.ini';
  gUserConfigFiles[flV1_9] :=
    AppData + 'DelphiDabbler\CodeSnip\User.ini';
  gMainDatabaseDirs[flV1_9] :=
    ProgramData + 'DelphiDabbler\CodeSnip\Data';
  gUserDatabaseDirs[flV1_9] := ''

  gCommonConfigFiles[flV2] :=
    ProgramData + 'DelphiDabbler\CodeSnip\Common.ini';
  gUserConfigFiles[flV2] :=
    AppData + 'DelphiDabbler\CodeSnip\User.ini';
  gMainDatabaseDirs[flV2] :=
    ProgramData + 'DelphiDabbler\CodeSnip\Data';
  gUserDatabaseDirs[flV2] :=
    AppData + 'DelphiDabbler\CodeSnip\UserData';

  gCommonConfigFiles[flV3] :=
    ProgramData + 'DelphiDabbler\CodeSnip\Common.ini';
  gUserConfigFiles[flV3] :=
    AppData + 'DelphiDabbler\CodeSnip\User.3.ini';
  gMainDatabaseDirs[flV3] :=
    ProgramData + 'DelphiDabbler\CodeSnip\Data';
  gUserDatabaseDirs[flV3] :=
    AppData + 'DelphiDabbler\CodeSnip\UserData.3';

  gCommonConfigFiles[flV4] :=
    ProgramData + 'DelphiDabbler\CodeSnip.4\Common.config';
  gUserConfigFiles[flV4] :=
    AppData + 'DelphiDabbler\CodeSnip.4\User.config';
  gMainDatabaseDirs[flV4] :=
    ProgramData + 'DelphiDabbler\CodeSnip.4\Database';
  gUserDatabaseDirs[flV4] :=
    AppData + 'DelphiDabbler\CodeSnip.4\UserDatabase';

  // Record installation type current being installed
  gCurrentCommonConfigFile := gCommonConfigFiles[flCurrent];
  gCurrentUserConfigFile := gUserConfigFiles[flCurrent];

end;

// TODO: Rename as InitGlobals;
procedure InitDataLocations;
  {Initialises global variables that store information about location of config
  files and database.
  }
begin
  InitAppDataFolders;
  if FileExists(gCommonConfigFiles[flV4]) or
    FileExists(gUserDatabaseDirs[flV4]) then
    gFileLocation := flV4
  else if FileExists(gCommonConfigFiles[flV3])
    and FileExists(gUserConfigFiles[flV3]) then
    gFileLocation := flV3
  else if FileExists(gCommonConfigFiles[flV2])
    and FileExists(gUserDatabaseDirs[flV2] + '\database.xml') then
    gFileLocation := flV2
  else if FileExists(gCommonConfigFiles[flV1_9]) then
    gFileLocation := flV1_9
  else if FileExists(gUserConfigFiles[flOriginal]) then
    gFileLocation := flOriginal
  else
    gFileLocation := flNone;
end;


{
 * UpdateDBase.ps
 *
 * Pascal script for use in [Code] Section of CodeSnip's Install.iss.
 *
 * Copies existing CodeSnip main and user databases from an original location
 * to location required by current version of CodeSnip.
 *
 * $Rev$
 * $Date$
 *
 * ***** BEGIN LICENSE BLOCK *****
 *
 * Version: MPL 1.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with the
 * License. You may obtain a copy of the License at http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
 * the specific language governing rights and limitations under the License.
 *
 * The Original Code is UpdateDBase.ps.
 *
 * The Initial Developer of the Original Code is Peter Johnson
 * (http://www.delphidabbler.com/).
 *
 * Portions created by the Initial Developer are Copyright (C) 2008-2009 Peter
 * Johnson. All Rights Reserved.
 *
 * Contributors:
 *    NONE
 *
 * ***** END LICENSE BLOCK *****
}


procedure CopyDirectory(SourceDir, DestDir: string);
  {Copies files from one directory to another.
    @param SourceDir [in] Directory containing files to be copied.
    @param DestDir [in] Directory to receive files. Created if it doesn't exist.
  }
var
  SourcePath: string; // source directory as path
  DestPath: string;   // destination directory as path
  FindRec: TFindRec;  // record used by directory search API
begin
  if not DirExists(SourceDir) then
    Exit;
  if not DirExists(DestDir) then
    CreateDir(DestDir);
  SourcePath := AddBackslash(SourceDir);
  DestPath := AddBackslash(DestDir);
  if FindFirst(SourcePath + '*', FindRec) then
  begin
    repeat
      if (FindRec.Attributes and FILE_ATTRIBUTE_DIRECTORY) = 0 then
      begin
        FileCopy(
          SourcePath + FindRec.Name,
          DestPath + FindRec.Name,
          False
        );
      end;
    until not FindNext(FindRec);
    FindClose(FindRec);
  end;
end;

procedure CopyOldMainDatabase;
  {Copies any main database in user's application data folder to common
  application folder.
  }
var
  OldDatabaseDir: string; // directory where old database files are stored
  NewDatabaseDir: string; // directory where files must be copied
begin
  OldDatabaseDir := AddBackslash(gUserAppDataDir) + 'Data';
  NewDatabaseDir := AddBackslash(gCommonAppDataDir) + 'Data';
  CopyDirectory(OldDatabaseDir, NewDatabaseDir);
end;

procedure CopyV2UserDatabase;
var
  OldDatabaseDir: string; // directory where v2 user database files are stored
  NewDatabaseDir: string; // directory to where files must be copied
begin
  OldDatabaseDir := AddBackslash(gUserAppDataDir) + 'UserData';
  NewDatabaseDir := AddBackslash(gUserAppDataDir) + 'UserData.3';
  CopyDirectory(OldDatabaseDir, NewDatabaseDir);
end;


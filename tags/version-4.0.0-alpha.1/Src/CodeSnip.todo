











{TODO -oSelf -cProposal : Consider what gesture support to add (needs Delphi 2010).}



{DONE -oSelf -cRefactor : Rename identifiers that refer to "routine" with "snippet".}





{DONE -oSelf -cProposal : Move Compile, View compile errors and configure compilers menu options to a new Compile menu?}
{TODO -oSelf -cRefactor : See if we can pull out common HTML and REML code into SGML unit}

{TODO -oSelf -cRefactor : Re-implement MakeSafeHTML in terms of a char entity class like that for REML? Use common base class with entities class in UREMLDataIO?}


{TODO -oSelf -cRefactor : Merge the IO and UI manager code into WBController}




{TODO -oSelf -cFeature : Add parsing for standard user routine. Must start with procedure or function. Need to
parse. Grammar is:
  <proc_proto> ::= "procedure" <ident> [<param_list>] ";" [<directives>]
  <fn_proto> ::= "function" <ident> [<param_list>] ":" <ident> ";" [<directives>]
  <param_list> ::= "(" <param_def> (*repeat ";" <param_def> *) ")"
  <param_def> ::= <ident> [ ":" <ident> ]
  <ident> ::= valid Pascal identifier
  <directives> ::= <directive> (*repeat ";" <directive> *)
  <directive> ::= "register" | "pascal" | "cdecl" | "stdcall" | "safecall" | "overload"

Parsing for consts and types for our purpose is simple:

  <type-def> ::= "type" <definitions>
  <const-def> ::= "const" <definitions>}

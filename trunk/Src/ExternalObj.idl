/*
 * ExternalObj.idl
 *
 * Source for type library that defines the interface to extensions to the
 * browser control DOM's "external object".
 *
 * v1.0 of 05 Jun 2006  - Original version. Before this file was created the
 *                        type library was created directly from Delphi's Type
 *                        Library Editor.
 *                      - Updated type library to v1.0.
 *                      - Renamed type library from CodeSnip.tlb to
 *                        ExternalObj.tlb.
 * v1.1 of 23 Nov 2006  - Added IWBExternal2 interface.
 *                      - Updated type library to v1.1.
 * v2.0 of 04 Nov 2007  - Replaced IWBExternal and IWBExternal2 with single
 *                        IWBExternal3 interface. This new interface has same
 *                        methods as IWBExternal2 except that HelpTopic method
 *                        was removed.
 * v3.0 of 14 Sep 2008  - Replaced IWBExternal3 with IWBExternal4:
 *                        - Modified DisplayRoutine to take an extra UserDefined
 *                          parameter.
 *                        - Added new EditRoutine method.
 * v4.0 of 17 Jun 2009  - Replaced IWBExternal4 with IWBExternal5:
 *                        - Replaced ToggleTestUnit method with ShowTestUnit.
 *                        - Added Donate method.
 *                        - Renamed DisplayRoutine method as DisplaySnippet,
 *                          CompileRoutine as CompileSnippet, EditRoutine as
 *                          EditSnippet.
 *                      - Updated all version references to v5.
 *                      - Deleted "Created by MIDL" custom entry.
 *
 *
 * ***** BEGIN LICENSE BLOCK *****
 *
 * Version: MPL 1.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with the
 * License. You may obtain a copy of the License at http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
 * the specific language governing rights and limitations under the License.
 *
 * The Original Code is ExternalObj.idl
 *
 * The Initial Developer of the Original Code is Peter Johnson
 * (http://www.delphidabbler.com/).
 *
 * Portions created by the Initial Developer are Copyright (C) 2006-2009 Peter
 * Johnson. All Rights Reserved.
 *
 * ***** END LICENSE BLOCK *****
 */


[
  uuid(FFAFBDD9-3E9A-408D-8616-167018E2083A),
  version(5.0),
  helpstring("CodeSnip DOM External Object Extender Type Library"),
  custom(DE77BA63-517C-11D1-A2DA-0000F8773CE9, 1219706147),
  custom(DE77BA64-517C-11D1-A2DA-0000F8773CE9, 117441012)
]

library ExternalObj
{

  importlib("stdole2.tlb");

  /*
   * V5 interface of extension to browser DOM's "external" object. Used for
   * browser controls in CodeSnip's main display.
   */
  [
    uuid(61AB2A0B-0262-49D5-8E6D-43161D5A3C9D),
    version(5.0),
    helpstring("DOM external object extender v5"),
    dual,
    oleautomation
  ]
  interface IWBExternal5: IDispatch
  {
    /*
     * Update database from internet.
     */
    [
    id(0x00000065)
    ]
    HRESULT _stdcall UpdateDbase( void );

    /*
     * Display named snippet.
     *    @param SnippetName [in] Name of snippet to display.
     *    @param UserDefined [in] Whether snippet is user defined.
     */
    [
    id(0x00000066)
    ]
    HRESULT _stdcall DisplaySnippet([in] BSTR SnippetName,
    	[in] VARIANT_BOOL UserDefined );

    /*
     * Compiles current snippet.
     */
    [
    id(0x00000067)
    ]
    HRESULT _stdcall CompileSnippet( void );

    /*
     * Displays a compiler log.
     *   @param Ver [in] Version of Delphi for which we need to display log. Ver
     *     is the ordinal value of the required compiler version enumerated
     *     type.
     */
    [
    id(0x00000068)
    ]
    HRESULT _stdcall ViewCompilerLog([in] int Ver );

    /*
     * Displays a hint.
     *   @param Hint [in] Hint to be displayed.
     */
    [
    id(0x00000069)
    ]
    HRESULT _stdcall ShowHint([in] BSTR Hint );

    /*
     * Displays configure compilers dialog box.
     */
    [
    id(0x0000006A)
    ]
    HRESULT _stdcall ConfigCompilers( void );

    /*
     * Displays a test unit.
    */
    [
    id(0x0000006B)
    ]
    HRESULT _stdcall ShowTestUnit( void );

    /*
     * Edits the named snippet.
     *    @param SnippetName [in] Name of snippet to edit. Must be user defined.
     */
    [
    id(0x0000006C)
    ]
    HRESULT _stdcall EditSnippet([in] BSTR SnippetName);

    /*
     * Displays Donate dialog box.
     */
    [
    id(0x0000006D)
    ]
    HRESULT _stdcall Donate( void );

  };

};

